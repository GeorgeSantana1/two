#include <ctx/Api.h>
#include <emscripten/bind.h>

using namespace emscripten;

EMSCRIPTEN_BINDINGS(mud_ctx)
{
    
    // Enums
    enum_<mud::DeviceType>("mud::DeviceType")
        .value("None", mud::DeviceType::None)
        .value("Keyboard", mud::DeviceType::Keyboard)
        .value("Mouse", mud::DeviceType::Mouse)
        .value("MouseLeft", mud::DeviceType::MouseLeft)
        .value("MouseRight", mud::DeviceType::MouseRight)
        .value("MouseMiddle", mud::DeviceType::MouseMiddle)
        .value("Touch", mud::DeviceType::Touch)
        .value("Count", mud::DeviceType::Count)
        ;
    enum_<mud::EventType>("mud::EventType")
        .value("None", mud::EventType::None)
        .value("Heartbeat", mud::EventType::Heartbeat)
        .value("Moved", mud::EventType::Moved)
        .value("Pressed", mud::EventType::Pressed)
        .value("Released", mud::EventType::Released)
        .value("Stroked", mud::EventType::Stroked)
        .value("DoubleStroked", mud::EventType::DoubleStroked)
        .value("Dragged", mud::EventType::Dragged)
        .value("DraggedTarget", mud::EventType::DraggedTarget)
        .value("DragStarted", mud::EventType::DragStarted)
        .value("DragEnded", mud::EventType::DragEnded)
        .value("Dropped", mud::EventType::Dropped)
        .value("Count", mud::EventType::Count)
        ;
    enum_<mud::InputMod>("mud::InputMod")
        .value("None", mud::InputMod::None)
        .value("Shift", mud::InputMod::Shift)
        .value("Ctrl", mud::InputMod::Ctrl)
        .value("Alt", mud::InputMod::Alt)
        .value("Any", mud::InputMod::Any)
        ;
    enum_<mud::Key>("mud::Key")
        .value("Unassigned", mud::Key::Unassigned)
        .value("Escape", mud::Key::Escape)
        .value("Num1", mud::Key::Num1)
        .value("Num2", mud::Key::Num2)
        .value("Num3", mud::Key::Num3)
        .value("Num4", mud::Key::Num4)
        .value("Num5", mud::Key::Num5)
        .value("Num6", mud::Key::Num6)
        .value("Num7", mud::Key::Num7)
        .value("Num8", mud::Key::Num8)
        .value("Num9", mud::Key::Num9)
        .value("Num0", mud::Key::Num0)
        .value("Minus", mud::Key::Minus)
        .value("Equals", mud::Key::Equals)
        .value("Back", mud::Key::Back)
        .value("Tab", mud::Key::Tab)
        .value("Q", mud::Key::Q)
        .value("W", mud::Key::W)
        .value("E", mud::Key::E)
        .value("R", mud::Key::R)
        .value("T", mud::Key::T)
        .value("Y", mud::Key::Y)
        .value("U", mud::Key::U)
        .value("I", mud::Key::I)
        .value("O", mud::Key::O)
        .value("P", mud::Key::P)
        .value("LeftBracket", mud::Key::LeftBracket)
        .value("RightBracket", mud::Key::RightBracket)
        .value("Return", mud::Key::Return)
        .value("LeftControl", mud::Key::LeftControl)
        .value("A", mud::Key::A)
        .value("S", mud::Key::S)
        .value("D", mud::Key::D)
        .value("F", mud::Key::F)
        .value("G", mud::Key::G)
        .value("H", mud::Key::H)
        .value("J", mud::Key::J)
        .value("K", mud::Key::K)
        .value("L", mud::Key::L)
        .value("Semicolon", mud::Key::Semicolon)
        .value("Apostrophe", mud::Key::Apostrophe)
        .value("Grave", mud::Key::Grave)
        .value("LeftShift", mud::Key::LeftShift)
        .value("Backslash", mud::Key::Backslash)
        .value("Z", mud::Key::Z)
        .value("X", mud::Key::X)
        .value("C", mud::Key::C)
        .value("V", mud::Key::V)
        .value("B", mud::Key::B)
        .value("N", mud::Key::N)
        .value("M", mud::Key::M)
        .value("Comma", mud::Key::Comma)
        .value("Period", mud::Key::Period)
        .value("Slash", mud::Key::Slash)
        .value("RightShift", mud::Key::RightShift)
        .value("Multiply", mud::Key::Multiply)
        .value("LeftAlt", mud::Key::LeftAlt)
        .value("Space", mud::Key::Space)
        .value("Capital", mud::Key::Capital)
        .value("F1", mud::Key::F1)
        .value("F2", mud::Key::F2)
        .value("F3", mud::Key::F3)
        .value("F4", mud::Key::F4)
        .value("F5", mud::Key::F5)
        .value("F6", mud::Key::F6)
        .value("F7", mud::Key::F7)
        .value("F8", mud::Key::F8)
        .value("F9", mud::Key::F9)
        .value("F10", mud::Key::F10)
        .value("Numlock", mud::Key::Numlock)
        .value("ScrollLock", mud::Key::ScrollLock)
        .value("Numpad7", mud::Key::Numpad7)
        .value("Numpad8", mud::Key::Numpad8)
        .value("Numpad9", mud::Key::Numpad9)
        .value("Subtract", mud::Key::Subtract)
        .value("Numpad4", mud::Key::Numpad4)
        .value("Numpad5", mud::Key::Numpad5)
        .value("Numpad6", mud::Key::Numpad6)
        .value("Add", mud::Key::Add)
        .value("Numpad1", mud::Key::Numpad1)
        .value("Numpad2", mud::Key::Numpad2)
        .value("Numpad3", mud::Key::Numpad3)
        .value("Numpad0", mud::Key::Numpad0)
        .value("Decimal", mud::Key::Decimal)
        .value("F11", mud::Key::F11)
        .value("F12", mud::Key::F12)
        .value("F13", mud::Key::F13)
        .value("F14", mud::Key::F14)
        .value("F15", mud::Key::F15)
        .value("NumpadEquals", mud::Key::NumpadEquals)
        .value("NumpadEnter", mud::Key::NumpadEnter)
        .value("RightControl", mud::Key::RightControl)
        .value("Mute", mud::Key::Mute)
        .value("NumpadComma", mud::Key::NumpadComma)
        .value("Divide", mud::Key::Divide)
        .value("RightAlt", mud::Key::RightAlt)
        .value("Pause", mud::Key::Pause)
        .value("Home", mud::Key::Home)
        .value("Up", mud::Key::Up)
        .value("PageUp", mud::Key::PageUp)
        .value("Left", mud::Key::Left)
        .value("Right", mud::Key::Right)
        .value("End", mud::Key::End)
        .value("Down", mud::Key::Down)
        .value("PageDown", mud::Key::PageDown)
        .value("Insert", mud::Key::Insert)
        .value("Delete", mud::Key::Delete)
        .value("LeftWin", mud::Key::LeftWin)
        .value("RightWin", mud::Key::RightWin)
        .value("Translated", mud::Key::Translated)
        ;
    enum_<mud::MouseButtonCode>("mud::MouseButtonCode")
        .value("LEFT_BUTTON", mud::LEFT_BUTTON)
        .value("RIGHT_BUTTON", mud::RIGHT_BUTTON)
        .value("MIDDLE_BUTTON", mud::MIDDLE_BUTTON)
        .value("NO_BUTTON", mud::NO_BUTTON)
        ;
    
    // Sequences
    
    // Arrays
    
    // Structs
    value_object<mud::InputEvent>("InputEvent")
        .field("deviceType", &mud::InputEvent::m_deviceType)
        .field("eventType", &mud::InputEvent::m_eventType)
        .field("receiver", &mud::InputEvent::m_receiver)
        .field("consumer", &mud::InputEvent::m_consumer)
        .field("abort", &mud::InputEvent::m_abort)
        .field("modifiers", &mud::InputEvent::m_modifiers)
        .field("key", &mud::InputEvent::m_key)
        ;
    value_object<mud::KeyEvent>("KeyEvent")
        .field("code", &mud::KeyEvent::m_code)
        .field("char", &mud::KeyEvent::m_char)
        ;
    value_object<mud::MouseEvent>("MouseEvent")
        .field("pos", &mud::MouseEvent::m_pos)
        .field("relative", &mud::MouseEvent::m_relative)
        .field("delta", &mud::MouseEvent::m_delta)
        .field("deltaZ", &mud::MouseEvent::m_deltaZ)
        .field("pressed", &mud::MouseEvent::m_pressed)
        .field("button", &mud::MouseEvent::m_button)
        ;
    
    // Classes
    class_<mud::Context>("Context")
        .property("resource_path", &mud::Context::m_resource_path)
        .property("title", &mud::Context::m_title)
        .property("width", &mud::Context::m_width)
        .property("height", &mud::Context::m_height)
        .property("full_screen", &mud::Context::m_full_screen)
        .property("active", &mud::Context::m_active)
        .property("shutdown", &mud::Context::m_shutdown)
        .property("cursor", &mud::Context::m_cursor)
        .property("mouse_lock", &mud::Context::m_mouse_lock)
        .function("reset", &mud::Context::reset)
        .function("init_input", &mud::Context::init_input)
        .function("next_frame", &mud::Context::next_frame)
        .function("lock_mouse", &mud::Context::lock_mouse)
        ;
    class_<mud::ControlNode>("ControlNode")
        ;
    class_<mud::Keyboard>("Keyboard")
        ;
    class_<mud::Mouse>("Mouse")
        ;
    class_<mud::RenderSystem>("RenderSystem")
        ;
    
    // Functions
    
}
